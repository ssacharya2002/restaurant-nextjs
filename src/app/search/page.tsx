import { Metadata } from "next";
import Header from "./components/Header";
import RestaurantCard from "./components/RestaurantCard";
import Sidebar from "./components/Sidebar";
import { PRICE, PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

export const metadata: Metadata = {
  title: " Search ",
  description: "Generated by create next app",
  keywords: "nextjs,restaurant,search",
};

interface searchParams {
  city?: string;
  region?: string;
  price?: PRICE;
}

const searchrestaurants = (searchParams: searchParams) => {
  const where: any = {};

  if (searchParams.city) {
    const location = {
      name: {
        equals: searchParams.city.toLowerCase(),
      },
    };
    where.location = location;
  }
  if (searchParams.region) {
    const region = {
      name: {
        equals: searchParams.region.toLowerCase(),
      },
    };
    where.region = region;
  }
  if (searchParams.price) {
    const price = {
      equals: searchParams.price,
    };
    where.price = price;
  }

  const select = {
    id: true,
    name: true,
    main_image: true,
    price: true,
    location: true,
    region: true,
    slug: true,
    reviews:true
  };
  return prisma.restaurant.findMany({
    where,
    select,
  });
};

const fetchLocations = () => {
  return prisma.location.findMany();
};
const fetchRegions = () => {
  return prisma.region.findMany();
};

async function searchPage({ searchParams }: { searchParams: searchParams }) {
  const restaurants = await searchrestaurants(searchParams);
  const locations = await fetchLocations();
  const regions = await fetchRegions();

  return (
    <>
      <Header />
      <div className="flex py-4 m-auto w-2/3 justify-between items-start">
        <Sidebar
          searchParams={searchParams}
          locations={locations}
          regions={regions}
        />

        <div className="w-5/6">
          {restaurants.length
            ? restaurants.map((restaurant) => (
                <RestaurantCard restaurant={restaurant} />
              ))
            : "Sory no restaurants found"}
        </div>
      </div>
    </>
  );
}

export default searchPage;
